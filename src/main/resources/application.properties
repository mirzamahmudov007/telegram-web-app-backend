spring.application.name=Challenge
# Server configuration
server.port=8089

# Database configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/olmosMarket
spring.datasource.username=olmosMarket
spring.datasource.password=1234
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Telegram bot configuration
telegram.bot.username=@html_takrorlash_bot
telegram.bot.token=7725036235:AAGvK90AqE3cgLUb28CMmrqD_3Mrvo9bpjA

# Web App configuration
webapp.url=  https://lived-shoes-clicking-pn.trycloudflare.com
#https://unless-saying-consumption-journalist.trycloudflare.com

# JWT Configuration
jwt.secret=04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897894e72ed2db33fb796f153d1a2010f4a5d1b542362d47cdc6687635d
jwt.expiration=3600000
jwt.refresh-expiration=86400000

# CORS configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Logging
logging.level.org.springframework.security=DEBUG


# OpenAPI (Swagger) configuration
springdoc.swagger-ui.path=/api-documentation
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=method

telegram.openapi.dev-url=http://localhost:8089
telegram.openapi.prod-url=https://api.example.com

